{"region":{"prefix":["region"],"body":["// #region $1","$2","// #endregion"],"description":"Folding regions\n"},"React Class Component and export it by default":{"prefix":["rcc"],"body":["import React, { Component } from 'react'","","export default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {","\tconstructor(props) {","\t\tsuper(props)","","\t\tthis.state = {","\t\t\t\t $2","\t\t}","","\t\tthis.handleEvent = this.handleEvent.bind(this)","\t}","","\tcomponentDidMount() {","\t\t$3","\t}","","\tcomponentDidUpdate(prevProps, prevState, snapshot) { if (prevState.name !== this.state.name) { this.handler() } }","","\tcomponentWillUnmount() {","\t\t$4","\t}","","\t// Prototype methods, Bind in Constructor (ES2015)","\thandleEvent() {}","","\t// Class Properties (Stage 3 Proposal)","\thandler = () => { this.setState() }","","\trender() {","\t\treturn (","\t\t\t<>","\t\t\t\t$0","\t\t\t</>","\t\t)","\t}","}",""],"description":"Creates a React Class Component and export it by default\n"},"Create React Class Component with PropTypes and export it by default":{"prefix":["rccpt"],"body":["import React, { Component } from 'react'","import PropTypes from 'prop-types'","","export default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {","\tstatic propTypes = {","\t\t${2:prop}: ${3:PropTypes}","\t}","","\trender() {","\t\treturn (","\t\t\t<>","\t\t\t\t$0","\t\t\t</>","\t\t)","\t}","}",""],"description":"Creates a React class component with PropTypes and export it by default\n"},"Create React Class Component (all lifecycle)":{"prefix":["rccl"],"body":["import React, { Component } from 'react'","","export default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends Component {","\tconstructor(props) {","\t\tsuper(props)","","\t\tthis.state = { propertyName: '' }","\t\tthis.handleEvent = this.handleEvent.bind(this)","\t}","","\tstatic getDerivedStateFromProps(nextProps, prevState) {} // Rarely Used","","\tstatic getDerivedStateFromError(error) {} // Rarely Used","","\tcomponentDidMount() {}","","\tshouldComponentUpdate(nextProps, nextState, nextContext) {} // Rarely Used","","\tgetSnapshotBeforeUpdate(prevProps, prevState) {} // Rarely Used","","\tcomponentDidUpdate(prevProps, prevState, snapshot) { if (prevState.name !== this.state.name) { this.handler() } }","","\tcomponentWillUnmount() {}","","\tcomponentDidCatch(error, errorInfo) {} // Rarely Used","","\tUNSAFE_componentWillMount() {} // Legacy","","\tUNSAFE_componentWillReceiveProps(nextProps, nextContext) {} // Legacy","","\tUNSAFE_componentWillUpdate(nextProps, nextState, nextContext) {} // Legacy","","\t// Prototype methods, Bind in Constructor (ES2015)","\thandleEvent() {}","","\t// Class Properties (Stage 3 Proposal)","\thandler = () => { this.setState() }","","\trender() {","\t\treturn <></>","\t}","}"],"description":"Creates a React class Component(Lifecycles)\n"},"Create React.PureComponent and export it by default, it's works with class-based components":{"prefix":["rpc"],"body":["import React, { PureComponent } from 'react'","","export default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {","\tconstructor(props) {","\t\tsuper(props)","","\t\tthis.state = {","\t\t\t\t $2","\t\t}","","\t\tthis.handleEvent = this.handleEvent.bind(this)","\t}","","\tcomponentDidMount() {","\t\t$3","\t}","","\trender() {","\t\treturn (","\t\t\t<>","\t\t\t\t$0","\t\t\t</>","\t\t)","\t}","}",""],"description":"`React.PureComponent` is similar to `React.Component`. The difference between them is that `React.Component` doesn’t implement `shouldComponentUpdate()`, but `React.PureComponent` implements it with a shallow prop and state comparison.\n"},"Create React.PureComponent with PropTypes and export it by default, it's works with class-based components":{"prefix":["rpcpt"],"body":["import React, { PureComponent } from 'react'","import PropTypes from 'prop-types'","","export default class ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} extends PureComponent {","\tstatic propTypes = {","","\t}","","\trender() {","\t\treturn (","\t\t\t<>","\t\t\t\t$0","\t\t\t</>","\t\t)","\t}","}",""],"description":"`React.PureComponent` is similar to `React.Component`. The difference between them is that `React.Component` doesn’t implement `shouldComponentUpdate()`, but `React.PureComponent` implements it with a shallow prop and state comparison.\n"},"createContext":{"prefix":["context"],"body":["import { createContext, useContext } from 'react'","","const ${1:initialState} = {}","const ${2:AppContext} = createContext(${1})","const { Provider, Consumer } = ${2}","","export { ${2}, Provider, Consumer }","","export default function useAppContext() {","\tconst ${3:appValue} = useContext(${2})","\treturn ${3};","}",""],"description":"Create React context\n"},"Create React.memo Component and export it by default, it's works with functional components":{"prefix":["rmc"],"body":["import React, { memo } from 'react'","","export default memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {","\treturn (","\t\t<>","\t\t\t$0","\t\t</>","\t)","})",""],"description":"`React.memo` is a *higher order component*. It’s similar to `React.PureComponent` but for function components instead of classes.\n"},"Create React.memo Component with PropTypes and export it by default, it's works with functional components":{"prefix":["rmcpt"],"body":["import React, { memo } from 'react'","import PropTypes from 'prop-types'","","const ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = memo(function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {","\treturn (","\t\t<>","\t\t\t$0","\t\t</>","\t)","})","","${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {","\t","}","","export default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",""],"description":"`React.memo` is a *higher order component*. It’s similar to `React.PureComponent` but for function components instead of classes.\n"},"React Functional Component":{"prefix":["rfc"],"body":["function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(${2:props}) {","\t$0","","\treturn (","\t\t<>","\t\t\t","\t\t</>","\t)","}",""],"description":"Creates a React Functional Component\n"},"React Functional Component and export":{"prefix":["rfce"],"body":["import React from 'react'","","export function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(${2:props}) {","\t$0","","\treturn (","\t\t<>","\t\t\t","\t\t</>","\t)","}",""],"description":"Creates a React Functional Component and export\n"},"React Functional Component and export it by default":{"prefix":["rfced"],"body":["import React from 'react'","","export default function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(${2:props}) {","\t$0","","\treturn (","\t\t<>","\t\t\t","\t\t</>","\t)","}",""],"description":"Creates a React Functional Component and export it by default\n"},"React Functional Component with PropTypes":{"prefix":["rfcpt"],"body":["import React from 'react'","import PropTypes from 'prop-types'","","function ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(props) {","\treturn (","\t\t<>","\t\t\t$0","\t\t</>","\t)","}","","${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}.propTypes = {","\t","}","","export default ${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}",""],"description":"Creates a React Functional Component with PropTypes\n"},"HOC Component":{"prefix":["hoc"],"body":["import React, { Component } from 'react'","","const with${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}} = (WrappedComponent) => {","\treturn class extends Component {","\t\tconstructor(props) {","\t\t\tsuper(props)","\t\t\tthis.state = { property }","\t\t}","","\t\trender() {","\t\t\tconst newProps = { property }","\t\t\treturn <WrappedComponent {...this.props} {...newProps} />","\t\t}","\t}","}","","export default withTestReact","// const EnhancedComponent = with${1:${TM_FILENAME_BASE/(.*)/${1:/pascalcase}/g}}(WrappedComponent)"],"description":"HOC Component\n"},"useState":{"prefix":["us","hooks.useState"],"body":["const [${1:state}, set${1/(.*)/${1:/capitalize}/}] = useState(${2:initialState})"],"description":"useState, Returns a stateful value, and a function to update it.\n"},"useEffect Without Cleanup":{"prefix":["ue","hooks.useEffect"],"body":["useEffect(() => {","\t$1","}, [])"],"description":"useEffect, Accepts a function that contains imperative, possibly effectful code.\n"},"useEffect Cleanup":{"prefix":["uec","hooks.useEffect.Cleanup"],"body":["useEffect(() => {","\t// side effects","\t$1","","\t// cleanup","\treturn () => {","\t\t$2","\t}","}, [])"],"description":"useEffect, return a clean-up function.\n"},"useContext":{"prefix":["uc","hooks.useContext"],"body":["const ${1:featureContext} = useContext(${2:FeatureContext})"],"description":"useContext, Accepts a context object (the value returned from `React.createContext`) and returns the current context value for that context. \n"},"useReducer":{"prefix":["ur","hooks.useReducer"],"body":["const [state, dispatch] = useReducer(${1:reducer}, ${2:initializerArg})"],"description":"useReducer, An alternative to `useState`. Accepts a reducer of type `(state, action) => newState`, and returns the current state paired with a `dispatch` method.\n"},"useCallback":{"prefix":["ucb","hooks.useCallback"],"body":["let ${1:memoizedCallback} = useCallback(() => {","\t${3:fn($2)}","}, [${2:deps}])"],"description":"useCallback, Returns a memoized callback.\n"},"useMemo":{"prefix":["um","hooks.useMemo"],"body":["let ${1:memoizedValue} = useMemo(() => ${3:computeExpensiveValue}($2), [${2:deps}])"],"description":"useMemo, Returns a memoized value.\n"},"useRef":{"prefix":["ure","hooks.useRef"],"body":["const ${1:ref} = useRef(${2:initialValue})"],"description":"useRef, returns a mutable ref object whose `.current` property is initialized to the passed argument (`initialValue`). The returned object will persist for the full lifetime of the component.\n"},"useImperativeHandle":{"prefix":["uih","hooks.useImperativeHandle"],"body":["// exposed components","import React, { useRef, useImperativeHandle, forwardRef } from 'react'","","function Button(props, ref) {","\tconst buttonRef = useRef()","\tuseImperativeHandle(ref, () => ({","\t\texposedProperty: () => {","\t\t\tconsole.log(`event in Button`)","\t\t},","\t}))","\treturn (","\t\t<button ref={buttonRef} {...props}>","\t\t\tButton","\t\t</button>","\t)","}","","","export default forwardRef(Button)","","","// parent components ","import React, { useRef } from 'react'","import Button from './Button'","","function Form() {","\tconst buttonRef = useRef(null)","","\tconst handleClick = () => {","\t\tconsole.log(Object.keys(buttonRef.current)) // ['exposedProperty']","\t\tconsole.log('event in Form')","\t\tbuttonRef.current.exposedProperty()","\t}","","\treturn (","\t\t<>","\t\t\t<Button onClick={handleClick} ref={buttonRef} />","\t\t</>","\t)","}"],"description":"useImperativeHandle, customizes the instance value that is exposed to parent components when using `ref`.\n"},"useDebugValue":{"prefix":["udv","hooks.useDebugValue"],"body":["useDebugValue(${1:value})"],"description":"useDebugValue, can be used to display a label for custom hooks in React DevTools.\n"},"useLayoutEffect":{"prefix":["ule","hooks.useLayoutEffect"],"body":["useLayoutEffect(() => {","\t// side effects","\t$1","","\t// cleanup","\treturn () => {","\t\t$2","\t}","}, [])"],"description":"useLayoutEffect, Use this to read layout from the DOM and synchronously re-render. Updates scheduled inside `useLayoutEffect` will be flushed synchronously, before the browser has a chance to paint.\n"},"import React":{"prefix":["imr"],"body":["import React from 'react'"]},"import React useState":{"prefix":["imrus"],"body":["import React, { useState } from 'react'"]},"import React useState useEffect":{"prefix":["imruu"],"body":["import React, { useState, useEffect } from 'react'"]},"import ReactDOM":{"prefix":["imrd"],"body":["import ReactDOM from 'react-dom'"]},"import react component":{"prefix":["imrc"],"body":["import React, { Component } from 'react'"]},"import React, { Component } & PropTypes":{"prefix":["imrcpt"],"body":["import React, { Component } from 'react'","import PropTypes from 'prop-types'"]},"import React, { PureComponent }":{"prefix":["imrpc"],"body":["import React, { PureComponent } from 'react'"]},"import React, { PureComponent } & PropTypes":{"prefix":["imrpcpt"],"body":["import React, { PureComponent } from 'react'","import PropTypes from 'prop-types'"]},"import React, { memo }":{"prefix":["imrm"],"body":["import React, { memo } from 'react'"]},"import React, { memo } & PropTypes":{"prefix":["imrmpt"],"body":["import React, { memo } from 'react'","import PropTypes from 'prop-types'"]},"import PropTypes":{"prefix":["impt"],"body":["import PropTypes from 'prop-types'"]},"component constructor":{"prefix":["constructor"],"body":["constructor(props) {","\tsuper(props)","","\tthis.state = {","\t\t$0","\t}","","\tthis.handleEvent = this.handleEvent.bind(this)","}",""],"description":"The constructor for a React component is called before it is mounted.\n"},"componentDidMount":{"prefix":["cdm","lifecycle.componentDidMount"],"body":["componentDidMount() {","\t$1","}","","$0"],"description":"Invoked once, only on the client (not on the server), immediately after the initial rendering occurs.\n"},"componentDidUpdate":{"prefix":["cdu","lifecycle.componentDidUpdate"],"body":["componentDidUpdate(prevProps, prevState) {","\tif (prevState.${1:propertyName} !== this.state.${1:propertyName}) {","\t\t${1:this.handler()}","\t}","","$0}",""],"description":"Invoked immediately after the component's updates are flushed to the DOM.\n"},"componentWillUnmount":{"prefix":["cwu","lifecycle.componentWillUnmount"],"body":["componentWillUnmount() {","\t$1","}","","$0"],"description":"Invoked immediately before a component is unmounted from the DOM.\n"},"component render":{"prefix":["render","lifecycle.componentRender"],"body":["render() {","\treturn (","\t\t<>","\t\t\t$0","\t\t</>","\t)","}"],"description":"React Class Component basic render.\n"},"static getDerivedStateFromProps":{"prefix":["gdsfp","lifecycle.getDerivedStateFromProps"],"body":["static getDerivedStateFromProps(nextProps, prevState) { // Rarely Used","\t$1","}","$0",""],"description":"Invoked right before calling the render method, both on the initial mount and on subsequent updates.\n"},"static getDerivedStateFromError":{"prefix":["gdsfe","lifecycle.getDerivedStateFromError"],"body":["static getDerivedStateFromError(error) { // Rarely Used","\treturn { hasError: true };","}","$0",""],"description":"This lifecycle is invoked after an error has been thrown by a descendant component. It receives the error that was thrown as a parameter and should return a value to update state.\n"},"shouldComponentUpdate":{"prefix":["scu","lifecycle.shouldComponentUpdate"],"body":["shouldComponentUpdate(nextProps, nextState, nextContext) { // Rarely Used","\t$1","}","","$0"],"description":"Invoked before rendering when new props or state are being received. \n"},"getSnapshotBeforeUpdate":{"prefix":["gsbu","lifecycle.getSnapshotBeforeUpdate"],"body":["getSnapshotBeforeUpdate(prevProps, prevState) { // Rarely Used","\t$0","}","","$1"],"description":"Called right before mutations are made (e.g. before the DOM is updated)\n"},"UNSAFE_componentWillMount":{"prefix":["cwm","lifecycle.UNSAFE_componentWillMount"],"body":["UNSAFE_componentWillMount() { // Legacy","\t$1","}","","$0"],"description":"DEPRECATED!!!. Invoked once, both on the client and server, immediately before the initial rendering occurs\n"},"UNSAFE_componentWillReceiveProps":{"prefix":["cwrp","lifecycle.UNSAFE_componentWillReceiveProps"],"body":["UNSAFE_componentWillReceiveProps(nextProps, nextContext) { // Legacy","\t$1","}","","$0"],"description":"DEPRECATED!!!. Invoked when a component is receiving new props. This method is not called for the initial render.\n"},"UNSAFE_componentWillUpdate":{"prefix":["cwup","lifecycle.UNSAFE_componentWillUpdate"],"body":["UNSAFE_componentWillUpdate(nextProps, nextState, nextContext) { // Legacy","\t$1","}","","$0"],"description":"DEPRECATED!!!. Invoked immediately before rendering when new props or state are being received.\n"},"pt.array (Primitive Type)":{"prefix":["pt.array"],"body":["PropTypes.array,"],"description":"Array prop type.\n"},"pt.array.required":{"prefix":["pt.array.required"],"body":["PropTypes.array.isRequired,"],"description":"Array prop type required.\n"},"pt.bool (Primitive Type)":{"prefix":["pt.bool"],"body":["PropTypes.bool,"],"description":"Bool prop type.\n"},"pt.bool.required":{"prefix":["pt.bool.required"],"body":["PropTypes.bool.isRequired,"],"description":"Bool prop type required.\n"},"pt.func (Primitive Type)":{"prefix":["pt.func"],"body":["PropTypes.func,"],"description":"Func prop type.\n"},"pt.func.required":{"prefix":["pt.func.required"],"body":["PropTypes.func.isRequired,"],"description":"Func prop type required.\n"},"pt.number (Primitive Type)":{"prefix":["pt.number"],"body":["PropTypes.number,"],"description":"Number prop type.\n"},"pt.number.required":{"prefix":["pt.number.required"],"body":["PropTypes.number.isRequired,"],"description":"Number prop type required.\n"},"pt.object (Primitive Type)":{"prefix":["pt.object"],"body":["PropTypes.object,"],"description":"Object prop type.\n"},"pt.object.required":{"prefix":["pt.object.required"],"body":["PropTypes.object.isRequired,"],"description":"Object prop type required.\n"},"pt.string (Primitive Type)":{"prefix":["pt.string"],"body":["PropTypes.string,"],"description":"String prop type.\n"},"pt.string.required":{"prefix":["pt.string.required"],"body":["PropTypes.string.isRequired,"],"description":"String prop type required.\n"},"pt.symbol (Primitive Type)":{"prefix":["pt.symbol"],"body":["PropTypes.symbol,"],"description":"Symbol prop type.\n"},"pt.symbol.required":{"prefix":["pt.symbol.required"],"body":["PropTypes.symbol.isRequired,"],"description":"Symbol prop type required.\n"},"pt.any":{"prefix":["pt.any"],"body":["PropTypes.any,"],"description":"A value of any data type.\n"},"pt.any.required":{"prefix":["pt.any.required"],"body":["PropTypes.any.required,"],"description":"A value of any data type required.\n"},"pt.arrayOf":{"prefix":["pt.arrayOf"],"body":["PropTypes.arrayOf(${0:PropTypes.number}),"],"description":"An array of a certain type.\n"},"pt.arrayOf.required":{"prefix":["pt.arrayOf.required"],"body":["PropTypes.arrayOf(${0:PropTypes.number}).isRequired,"],"description":"An array of a certain type required.\n"},"pt.element":{"prefix":["pt.element"],"body":["PropTypes.element,"],"description":"A React element (ie. <MyComponent />).\n"},"pt.element.required":{"prefix":["pt.element.required"],"body":["PropTypes.element.isRequired,"],"description":"A React element (ie. <MyComponent />) required.\n"},"pt.elementType":{"prefix":["pt.elementType"],"body":["PropTypes.elementType,"],"description":"A React element type (ie. MyComponent).\n"},"pt.elementType.required":{"prefix":["pt.elementType.required"],"body":["PropTypes.elementType.isRequired,"],"description":"A React element type (ie. MyComponent) required.\n"},"pt.instanceOf":{"prefix":["pt.instanceOf"],"body":["PropTypes.instanceOf(${0:Constructor}),"],"description":"Is an instance of a class prop type, This uses JS's instanceof operator.\n"},"pt.instanceOf.required":{"prefix":["pt.instanceOf.required"],"body":["PropTypes.instanceOf(${0:Constructor}).isRequired,"],"description":"Is an instance of a class prop type required.\n"},"pt.node":{"prefix":["pt.node"],"body":["PropTypes.node,"],"description":"Anything that can be rendered: numbers, strings, elements or an array (or fragment) containing these types.\n"},"pt.node.required":{"prefix":["pt.node.required"],"body":["PropTypes.node.isRequired,"],"description":"Anything that can be rendered: numbers, strings, elements or an array (or fragment) containing these types required.\n"},"pt.objectOf":{"prefix":["pt.objectOf"],"body":["PropTypes.objectOf(${0:PropTypes.number}),"],"description":"An object with property values of a certain type.\n"},"pt.objectOf.required":{"prefix":["pt.objectOf.required"],"body":["PropTypes.objectOf(${0:PropTypes.number}).isRequired,"],"description":"An object with property values of a certain type required.\n"},"pt.oneOf (Enum Type)":{"prefix":["pt.oneOf"],"body":["PropTypes.oneOf(['${0:value}']),"],"description":"prop limited to specific values by treating it as an enum.\n"},"pt.oneOf.required":{"prefix":["pt.oneOf.required"],"body":["PropTypes.oneOf(['${0:value}']).isRequired,"],"description":"prop limited to specific values by treating it as an enum required.\n"},"pt.oneOfType":{"prefix":["pt.oneOfType"],"body":["PropTypes.oneOfType([","\t${1:PropTypes.string},","\t${2:PropTypes.number},","\t${3:PropTypes.instanceOf(Message)}","]),"],"description":"An object that could be one of many types.\n"},"pt.oneOfType.required":{"prefix":["pt.oneOfType.required"],"body":["PropTypes.oneOfType([","\t${1:PropTypes.string},","\t${2:PropTypes.number},","\t${3:PropTypes.instanceOf(Message)}","]).isRequired,"],"description":"An object that could be one of many types required.\n"},"pt.shape":{"prefix":["pt.shape"],"body":["PropTypes.shape({","\toptionalProperty: ${1:PropTypes.string,}","\trequiredProperty: ${2:PropTypes.number.isRequired,}","}),"],"description":"An object taking on a particular shape.\n"},"pt.shape.required":{"prefix":["pt.shape.required"],"body":["PropTypes.shape({","\toptionalProperty: ${1:PropTypes.string,}","\trequiredProperty: ${2:PropTypes.number.isRequired,}","}).isRequired,"],"description":"An object taking on a particular shape required.\n"},"pt.exact (Strict Shape Type)":{"prefix":["pt.exact"],"body":["PropTypes.exact({","\toptionalProperty: ${1:PropTypes.string,}","\trequiredProperty: ${2:PropTypes.number.isRequired,}","}),"],"description":"An object with warnings on extra properties.\n"},"pt.exact.required":{"prefix":["pt.exact.required"],"body":["PropTypes.exact({","\toptionalProperty: ${1:PropTypes.string,}","\trequiredProperty: ${2:PropTypes.number.isRequired,}","}).isRequired,"],"description":"An object with warnings on extra properties isRequired\n"},"pt.custom":{"prefix":["pt.custom"],"body":["function (props, propName, componentName) {","\tif (!/matchme/.test(props[propName])) {","\t\treturn new Error('Invalid prop `' + propName + '` supplied to' + ' `' + componentName + '`. Validation failed.');","\t}","}"],"description":"specify a custom validator. It should return an Error object if the validation fails. Don't `console.warn` or throw, as this won't work inside `oneOfType`.\n"},"pt.custom.array":{"prefix":["pt.custom.array"],"body":["PropTypes.arrayOf(function (propValue, key, componentName, location, propFullName) {","\tif (!/matchme/.test(propValue[key])) {","\t\treturn new Error(","\t\t\t'Invalid prop `' + propFullName + '` supplied to' + ' `' + componentName + '`. Validation failed.'","\t\t)","\t}","})"],"description":"supply a custom validator to `arrayOf` and `objectOf`. It should return an Error object if the validation fails. The validator will be called for each key in the array or object. The first two arguments of the validator are the array or object itself, and the current item's key.\n"},"PT.defaultProps":{"prefix":["PT.defaultProps"],"body":["static defaultProps = {\n\t$0\n}\n"],"description":"declare `defaultProps` as static property within a React component class.\n"},"pt.checkPropTypes()":{"prefix":["pt.checkPropTypes()"],"body":["PropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent')"],"description":"trigger the validation manually.\n"},"pt.resetWarningCache()":{"prefix":["pt.resetWarningCache()"],"body":["PropTypes.resetWarningCache()"],"description":"reset the error warning cache in tests.\n"},"createRef":{"prefix":["ref"],"body":["this.${1:refName}Ref = React.createRef()",""],"description":"Create ref statement used inside constructor\n"},"forwardRef":{"prefix":["fref"],"body":["const Button = React.forwardRef((props, ref) => (<button ref={ref}> {props.children} </button>))","","// You can now get a ref directly to the DOM button:","const ref = React.createRef()","<Button ref={ref}>Click me!</Button>"],"description":"Forward ref statement used inside component\n"},"import React Router <BrowserRouter>, <Switch>, <Route> (v5)":{"prefix":["imrrsr"],"body":["import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'"],"description":"import React Router <BrowserRouter>, <Switch>, <Route>. (v5)\n"},"import React Router <Switch>, <Route> (v5)":{"prefix":["imrsr"],"body":["import { Switch, Route } from 'react-router-dom'"],"description":"import React Router <Switch>, <Route>. (v5)\n"},"import React Router withRouter (v5)":{"prefix":["imrwr"],"body":["import { withRouter } from 'react-router'"],"description":"import React Router `withRouter`. (v5)\n"},"import React Router useHistory (v5)":{"prefix":["imruh"],"body":["import { useHistory } from 'react-router-dom'"],"description":"import React Router `useHistory`. (v5)\n"},"import React Router useRouteMatch (v5)":{"prefix":["imrurm"],"body":["import { useRouteMatch } from 'react-router-dom'"],"description":"import React Router `useRouteMatch`. (v5)\n"},"React Router <Switch>, <Route> (v5)":{"prefix":["rsr"],"body":["<Switch>","\t<Route exact path=\"/\">","\t\t<${1:Component} />","\t</Route>","\t<Route path=\"${2:path}\">","\t\t<${3:Component} />","\t</Route>","</Switch>"],"description":"React Router <Switch>, <Route>. (v5)\n"},"React Router <Route> (v5)":{"prefix":["rr(legacy)"],"body":["<Route path='${1:path}'>","\t<{$2:Component} />","</Route>"],"description":"React Router <Route>. (v5)\n[Route](https://reactrouter.com/web/api/Route)"},"React Router <Redirect> (v5)":{"prefix":["redirect"],"body":["<Redirect from=\"${1:/users/:id}\" to=\"${2:/users/profile/:id}\" />"],"description":"React Router `<Redirect>`. (v5)\n[Redirect](https://reactrouter.com/web/api/Redirect)"},"React Router useHistory (v5)":{"prefix":["ruh"],"body":["const history = useHistory()","","function handleClick() {","\thistory.push(${1:\"path\"})$0","}"],"description":"React Router `useHistory`(v5)\n[usehistory](https://reactrouter.com/web/api/Hooks/usehistory)"},"React Router useRouteMatch (v5)":{"prefix":["rurm"],"body":["const match = useRouteMatch()","","// build nested routes and links using match.url and `match.path`","<Link to={`${match.url}/me`}>My Profile</Link>","<Route path={`${match.path}/me`}><OwnUserProfile /></Route>"],"description":"React Router `useRouteMatch`(v5)\n[useRouteMatch](https://reactrouter.com/web/api/Hooks/useRouteMatch)"},"import React Router <BrowserRouter>, <Routes>, <Route>":{"prefix":["imrrr"],"body":["import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'"],"description":"import React Router `<BrowserRouter>, <Routes>, <Route>`\n"},"import React Router <BrowserRouter>":{"prefix":["imbr"],"body":["import { BrowserRouter as Router } from 'react-router-dom'","${0:<Router>\n\t<App />\n</Router>}"],"description":"import React Router `<BrowserRouter>`\n"},"import React Router <HashRouter>":{"prefix":["imhr"],"body":["import { HashRouter as Router } from 'react-router-dom'","${0:<Router>\n\t<App />\n</Router>}"],"description":"import React Router `<HashRouter>`\n"},"import React Router <MemoryRouter>":{"prefix":["immr"],"body":["import { MemoryRouter as Router } from 'react-router-dom'",""],"description":"import React Router `<MemoryRouter>`\n"},"import React Router <NativeRouter>":{"prefix":["imnr"],"body":["import { NativeRouter as Router } from 'react-router-dom'",""],"description":"import React Router `<NativeRouter>`\n"},"import React Router <Routes>, <Route>":{"prefix":["imrr"],"body":["import { Routes, Route } from 'react-router-dom'","${0:<Routes basename=\"/\">\n\t<Route path={componentConst.route\\} element={<Component />\\} />\n</Routes>}"],"description":"import React Router `<Routes>, <Route>`\n`<Routes>` instead of `<Switch>`\n"},"import React Router <Link>":{"prefix":["imrl"],"body":["import { Link } from 'react-router-dom'","${0:<Link to={path\\}>{name\\}</Link>}"],"description":"import React Router `<Link>`\n"},"import React Router <NavLink>":{"prefix":["imrnl"],"body":["import { NavLink } from 'react-router-dom'","${0:<NavLink to={path\\} end>{name\\}</NavLink>}"],"description":"import React Router `<NavLink>`\n"},"import React Router <Navigate>":{"prefix":["imrn"],"body":["import { Navigate } from 'react-router-dom'","${0:{condition && <Navigate to={path\\} replace={true\\} />\\}}"],"description":"import React Router `<Navigate>`\nA `<Navigate>` element changes the current location when it is rendered.\n`<Navigate>` instead of `<Redirect>`\n"},"import React Router <Outlet>":{"prefix":["imro"],"body":["import { Outlet } from 'react-router-dom'","${0:<Outlet />}"],"description":"import React Router <Outlet>\nAn `<Outlet>` should be used in parent route elements to render their child route elements. \n"},"import React Router useLocation":{"prefix":["imrul"],"body":["import { useLocation } from 'react-router-dom'","${0:let location = useLocation()\nuseEffect(() => {\n\thandleNavActionStyle(location)\n\\}, [location])}"],"description":"import React Router `useLocation` hook. \nThis hook returns the current `location` object. This can be useful if you'd like to perform some side effect whenever the current location changes."},"import React Router useNavigate":{"prefix":["imrun"],"body":["import { useNavigate } from 'react-router-dom'","${0:let navigate = useNavigate()\nnavigate(path, { replace: true \\})}"],"description":"import React Router `useNavigate` hook. \n `useNavigate` hook instead of `useHistory`\n"},"import React Router useParams":{"prefix":["imrup"],"body":["import { useParams } from 'react-router-dom'","${0:let { param \\} = useParams()}"],"description":"import React Router `useParams` hook. \n"},"import React Router usePrompt":{"prefix":["imrupr"],"body":["import { usePrompt } from 'react-router-dom'","${0:usePrompt('Are you sure you want to leave?', formData != null)}"],"description":"import React Router `usePrompt` hook. \n"},"import React Router useRoutes":{"prefix":["imrur"],"body":["import { useRoutes } from 'react-router-dom'"],"description":"import React Router `useRoutes` hook. \n"},"import React Router useSearchParams":{"prefix":["imrusp"],"body":["import { useSearchParams } from 'react-router-dom'","${0:let [searchParams, setSearchParams] = useSearchParams()\n function handleSubmit(event) {\n \tevent.preventDefault()\n \tlet params = serializeFormQuery(event.target)\n \tsetSearchParams(params)\n \\}}"],"description":"import React Router `useSearchParams` hook.\n"},"React Router <Link>":{"prefix":["rl","link"],"body":["<Link to={${1:path}}>{${2:name}}</Link>"],"description":"React Router `<Link>`\n"},"React Router <NavLink>":{"prefix":["rnl","nl"],"body":["<NavLink to={${1:path}} end>{${2:name}}</NavLink>"],"description":"React Router `<NavLink>`\n"},"React Router <Route>":{"prefix":["rr","route"],"body":["<Route path={${1:componentConst.route}\\} element={<${2:Component} />\\} />$0"],"description":"React Router `<Route>`\n"},"React Router useLocation":{"prefix":["rul"],"body":["let location = useLocation()","useEffect(() => {","\thandleNavActionStyle(location)","}, [location])"],"description":"The `useLocation` hook returns the current `location` object. This can be useful if you'd like to perform some side effect whenever the current location changes."},"React Router useNavigate":{"prefix":["run"],"body":["let navigate = useNavigate()","navigate(${1:path}, { replace: true })"],"description":"import React Router `useNavigate` hook. \n `useNavigate` hook instead of `useHistory`\n"},"React Router useParams":{"prefix":["rup"],"body":["const {${1:id}} = useParams()"],"description":"React Router `useParams` hook.\n"},"React Router usePrompt":{"prefix":["rupr"],"body":["usePrompt(${1:'Are you sure you want to leave?'}, ${2:formData != null})$0}"],"description":"React Router `usePrompt` hook.\n"},"React Router useRoutes":{"prefix":["rur"],"body":["let ${0:routes} = useRoutes([","  {","    path: ${1:'/'},","    element: ${2:<Dashboard />},","    children: [","      { path: ${3:'messages'}, element: ${4:<DashboardMessages />} },","      { path: ${5:'tasks'}, element: ${6:<DashboardTasks />} },","    ],","  },","  { path: ${7:'team'}, element: ${8:<AboutPage />} },","])","","return ${0:routes}"],"description":"React Router `useRoutes` hook.\n"},"React Router useSearchParams":{"prefix":["rusp"],"body":["let [searchParams, setSearchParams] = useSearchParams()","","function handleSubmit(event) {","\tevent.preventDefault()","\tlet params = serializeFormQuery(event.target)","\tsetSearchParams(params)","}"],"description":"React Router `useSearchParams` hook.\n"},"Destruct Class Component Props":{"prefix":["dtp"],"body":["const { $1 } = this.props"],"description":"Creates and assigns a local variable using props destructing\n"},"Destruct Class Component State":{"prefix":["dts"],"body":["const { $1 } = this.state"],"description":"Creates and assigns a local variable using state destructing\n"},"React Class Component setState updates by object":{"prefix":["tss"],"body":"this.setState({$0})","description":"Performs a shallow merge of nextState into current state\n"},"React Class Component setState updates by method":{"prefix":["tssfn"],"body":["this.setState((prevState, props) => { return { $0 }})",""],"description":"Performs a shallow merge of nextState into current state\n"},"this.props.property":{"prefix":["tpp"],"body":"this.props.${0:propertyName}","description":"Access component's props\n"},"this.state.property":{"prefix":["tsp"],"body":"this.state.${0:propertyName}"},"React Class Component this.bind.method":{"prefix":["bfn"],"body":"this.${1:methodName} = this.${1:methodName}.bind(this)$0","description":"bind a function to a component instance\n"}}